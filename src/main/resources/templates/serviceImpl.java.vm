package ${package.ServiceImpl};
import com.apl.common.utils.ResultUtils;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};

import ${package.Entity}.${entity}Po;
import ${cfg.vo}.${entity}ListVo;
import ${cfg.dto}.${entity}KeyDto;

import java.util.List;
import com.apl.common.pojo.dto.PageDto;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;


/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
@Slf4j
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}Po>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}Po> implements ${table.serviceName} {

    //状态code枚举
    /*enum ${table.serviceName}Code {

        ;

        private String code;
        private String msg;

        ${table.serviceName}Code(String code, String msg) {
             this.code = code;
             this.msg = msg;
        }
    }*/



    @Override
    public ResultUtils<Integer> add(${entity}Po ${table.entityPath}){

        Integer flag = baseMapper.insert(${table.entityPath});
        if(flag.equals(1)){
            return ResultUtils.APPRESULT(CommonStatusCode.SAVE_SUCCESS , ${table.entityPath}.getId());
        }

        return ResultUtils.APPRESULT(CommonStatusCode.SAVE_FAIL , null);
    }


    @Override
    public ResultUtils<Boolean> updById(${entity}Po ${table.entityPath}){

        Integer flag = baseMapper.updateById(${table.entityPath});
        if(flag.equals(1)){
            return ResultUtils.APPRESULT(CommonStatusCode.SAVE_SUCCESS , flag);
        }

        return ResultUtils.APPRESULT(CommonStatusCode.SAVE_FAIL , flag);
    }


    @Override
    public ResultUtils<Boolean> delById(Long id){

        boolean flag = removeById(id);
        if(flag){
            return ResultUtils.APPRESULT(CommonStatusCode.DEL_SUCCESS , flag);
        }

        return ResultUtils.APPRESULT(CommonStatusCode.DEL_FAIL , flag);
    }

    @Override
    public ResultUtils<${entity}Po> selectById(Long id){

        ${entity}Po ${table.entityPath} = getById(id);

        return ResultUtils.APPRESULT(CommonStatusCode.GET_SUCCESS, ${table.entityPath});
    }


    @Override
    public ResultUtils<Page<${entity}ListVo>> getList(PageDto pageDto, ${entity}KeyDto keyDto){

        Page<${entity}ListVo> page = new Page();
        page.setCurrent(pageDto.getPageIndex());
        page.setSize(pageDto.getPageSize());

        List<${entity}ListVo> list = baseMapper.getList(page , keyDto);
        page.setRecords(list);

        return ResultUtils.SUCCESS(page);
    }

}
#end
