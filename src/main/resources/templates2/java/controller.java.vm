package ${cfg.packageName}.controller;

#if(${restControllerStyle})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RestController;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.beans.factory.annotation.Autowired;
import com.apl.common.pojo.dto.PageDto;
import org.springframework.web.bind.annotation.*;
import ${package.Service}.${table.serviceName};
import ${cfg.po}.${entity}Po;
import ${cfg.vo}.${entity}ListVo;
import ${cfg.vo}.${entity}InfoVo;
import ${cfg.dto}.${entity}KeyDto;
import com.apl.lib.pojo.dto.PageDto;
import com.apl.lib.utils.ResultUtil;
import com.apl.lib.validate.ApiParamValidate;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;

/**
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping(value = "/${table.name}")
@Validated
@Api(value = "$!{table.comment}",tags = "$!{table.comment}")
@Slf4j
public class ${table.controllerName} {

    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;


    @PostMapping(value = "/add")
    @ApiOperation(value =  "添加", notes ="#foreach($field in ${cfg.exists_fields})${field.upperCaseName}_EXIST -> ${field.name}已经存在#if($foreach.hasNext)\n"+
                                         "#end#end")
    public ResultUtil<Long> add(@Validated ${entity}AddDto ${table.entityPath}AddDto) {
        ApiParamValidate.validate(${table.entityPath}AddDto);

        return ${table.entityPath}Service.add(${table.entityPath}AddDto);
    }


    @PostMapping(value = "/upd")
    @ApiOperation(value =  "更新",  notes ="#foreach($field in ${cfg.exists_fields})${field.upperCaseName}_EXIST -> ${field.name}已经存在#if($foreach.hasNext)\n"+
                                          "#end#end")
    public ResultUtil<Boolean> updById(@Validated ${entity}UpdDto ${table.entityPath}UpdDto) {
        ApiParamValidate.notEmpty("id", ${table.entityPath}UpdDto.getId());
        ApiParamValidate.validate(${table.entityPath}UpdDto);

        return ${table.entityPath}Service.updById(${table.entityPath}UpdDto);
    }


    @PostMapping(value = "/del")
    @ApiOperation(value =  "删除" , notes = "删除")
    @ApiImplicitParam(name = "id",value = " id",required = true  , paramType = "query")
    public ResultUtil<Boolean> delById(@NotNull(message = "id不能为空") @Min(value = 1 , message = "id不能小于1") Long id) {

        return ${table.entityPath}Service.delById(id);
    }


    @PostMapping(value = "/get")
    @ApiOperation(value =  "获取详细" , notes = "获取详细")
    @ApiImplicitParam(name = "id",value = "id",required = true  , paramType = "query")
    public ResultUtil<${entity}InfoVo> selectById(@NotNull(message = "id不能为空") @Min(value = 1 , message = "id不能小于1") Long id) {

        return ${table.entityPath}Service.selectById(id);
    }


    @PostMapping(value = "/get-list")
    @ApiOperation(value =  "分页查找" , notes = "分页查找")
    public ResultUtil<Page<${entity}ListVo>> getList(PageDto pageDto, @Validated ${entity}KeyDto keyDto) {

        return ${table.entityPath}Service.getList(pageDto , keyDto);
    }

}
